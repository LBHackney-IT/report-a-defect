- content_for :page_title_prefix, I18n.t('page_title.staff.defects.create.communal_area')

.govuk-grid-row
  .govuk-grid-column-two-thirds
    %h1.govuk-heading-xl
      = I18n.t('page_title.staff.defects.create.communal_area')
      %span.govuk-caption-l= 'Step 1 of 1'

    = render partial: '/shared/communal_areas/information', locals: { communal_area: @communal_area }

    = simple_form_for @defect, html: { class: 'new_defect' }, action: :post, url: communal_area_defects_path(@communal_area) do |f|
      .govuk-form-group
        .govuk-form-group
          %label.govuk-label.govuk-label{for: 'created_at_day'}
            = I18n.t('generic.label.created_date')
          = render partial: 'shared/defects/date_fields', locals: { name: 'created_at', date: Time.zone.now }

        = f.input :title,
                  hint: I18n.t('form.defect.title.description'),
                  label: 'Short title'
        = f.input :description,
                  wrapper: 'textarea',
                  as: :text,
                  input_html: { rows: 10 },
                  required: true
        = f.input :access_information,
          hint: I18n.t('form.defect.access_information.description'),
          wrapper: 'textarea',
          as: :text,
          input_html: { rows: 5 }
        = f.input :contact_name
        = f.input :contact_email_address
        = f.input :contact_phone_number,
                  hint: I18n.t('form.defect.contact_phone_number.hint')
        = f.input :trade,
                  wrapper: 'select',
                  input_html: { class: 'trades' },
                  collection: Defect::TRADES,
                  required: true
        = f.input :status,
                  wrapper: 'select',
                  input_html: { class: 'status' },
                  collection: Defect.statuses,
                  selected: @defect.status.downcase,
                  required: true,
                  label_method: ->(obj){ status_form_label(option_array: obj) },
                  value_method: :first
        = f.input :priority,
                  as: :radio_buttons,
                  wrapper: :radio_buttons,
                  item_wrapper_class: 'govuk-radios__item',
                  item_label_class: 'govuk-label',
                  input_html: { class: 'priorities' },
                  collection: @communal_area.scheme.priorities,
                  required: true,
                  selected: @defect.priority,
                  label_method: ->(obj){ priority_form_label(priority: obj) }

        %span.govuk-label.govuk-label
          %label.required
            Evidence
            = f.fields_for :evidences do |evidence_form|
              = evidence_form.input :description,
                        wrapper: 'textarea',
                        as: :text,
                        input_html: { rows: 1 }
              = evidence_form.input :supporting_file,
                                    as: :file
        %span.govuk-label.govuk-label
          %label.required
            Forwarding
        = f.input :send_contractor_email,
                  as: :boolean,
                  wrapper: :inline_checkbox,
                  input_html: { checked: @defect.send_contractor_email || true },
                  wrapper_html: { id: 'send_contractor_email' }
        = f.input :send_employer_agent_email,
                  as: :boolean,
                  wrapper: :inline_checkbox,
                  input_html: { checked: @defect.send_employer_agent_email || true },
                  wrapper_html: { id: 'send_employer_agent_email' }

      = f.button :submit, I18n.t('button.create.communal_defect')
