version: '3.1'
services:
  web:
    build:
      context: .
      args:
        RAILS_ENV: "development"
    image: local/report_a_defect
    ports: ["3000:3000"]
    container_name: report-a-defect_dev_web_1
    environment:
      RAILS_ENV: "development"
    env_file:
      - docker-compose.env
    depends_on:
      - db
    tty: true
    stdin_open: true
    restart: on-failure
    volumes:
      - .:/srv/report-a-defect:cached
      - dev_node_modules:/srv/report-a-defect/node_modules
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    networks:
      - dev
  db:
    image: postgres
    container_name: report-a-defect_dev_db_1
    volumes:
      - dev_pg_data:/var/lib/postgresql/data/:cached
    environment:
      - POSTGRES_DB=report-a-defect
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_HOST_AUTH_METHOD=trust
    restart: on-failure
    networks:
      - dev

  redis_queue:
    image: redis:latest
    command: redis-server
    restart: on-failure
    networks:
      - dev

  sidekiq:
    image: local/report_a_defect
    build:
      context: .
      args:
        RAILS_ENV: "development"
    environment:
      RAILS_ENV: "development"
      DATABASE_URL: "postgres://postgres@db:5432/report-a-defect?template=template0&pool=5&encoding=unicode"
    env_file:
      - docker-compose.env
    command: bundle exec sidekiq -C config/sidekiq.yml
    depends_on:
      - redis_queue
    restart: on-failure
    networks:
      - dev

networks:
  dev:
volumes:
  dev_pg_data: {}
  dev_node_modules:
