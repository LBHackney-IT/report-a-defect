#!/bin/bash

set -e

run_with_pretty_print()
{
  echo "===> $1"
  eval $1
}

start_test_server()
{
  run_with_pretty_print "docker-compose --file ${1:-docker-compose.test.yml} build"
  run_with_pretty_print "docker-compose --file ${1:-docker-compose.test.yml} up -d db-test"
  run_with_pretty_print "docker-compose --file ${1:-docker-compose.test.yml} run --rm test bundle exec rake db:setup db:migrate"
  run_with_pretty_print "docker-compose --file ${1:-docker-compose.test.yml} up -d test"
}


if [[ $# -eq 0 ]]
then
  run_with_pretty_print 'docker-compose --file docker-compose.test.yml down'
  start_test_server
fi

if [[ $1 == "up" ]]
then
  run_with_pretty_print 'docker-compose --file docker-compose.test.yml down'
  start_test_server
fi

if [[ $1 == "down" ]]
then
  run_with_pretty_print 'docker-compose --file docker-compose.test.yml down'
fi

if [[ $1 == "ci" ]]
then
  # Circle CI cannot mount volumes which are very useful for quick file reloading
  # in dev and test. Therefore we require an almost identical docker-compose.yml
  # file for CI only.

  # INFO: When running CI mode locally to verify changes, we need to clear up
  # any old state
  run_with_pretty_print 'docker-compose --file docker-compose.ci.yml down -v'

  start_test_server 'docker-compose.ci.yml'
fi
